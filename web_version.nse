local http = require "http"
local shortport = require "shortport"
local stdnse = require "stdnse"
local nmap = require "nmap"
local table = require "table"
local string = require "string"

portrule = function(host, port)
  return true
end

action = function(host, port)

--[[
  local function print_table(t)
    for k, v in pairs(t) do
      print(k .. " = " .. v)
    end
  end
--]]

  local function split(str,reps)
    local resultStrList = {}
    string.gsub(str,'[^'..reps..']+', function (w)
       table.insert(resultStrList,w)
    end)
    return resultStrList
  end

  local url = "/index.html"
  local response = http.get(host, port, url)
  local headers = response.rawheader

  --print_table(headers)

  local function is_v1_0(headers)
    -- return true if Cache-Control header is before Content-Length header

    local cc_index = 0
    for k, v in pairs(headers) do
      if split(v,':')[1] == "Cache-Control" then
        cc_index = k
        break
      end
    end

    local cl_index = 0
    for k, v in pairs(headers) do
      if split(v,':')[1] == "Content-length" then
        cl_index = k
        break
      end
    end

    return cc_index < cl_index
  end

  local server_version = is_v1_0(headers) and "1.0" or "1.1"

  local output = string.format("Web server at %s:%s is version %s", host.ip, port.number, server_version)
  return output
end

